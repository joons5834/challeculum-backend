<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="companion.challeculum.domains.ground.GroundDao">
    <update id="deleteGround">
        update ground
        set status='cancelled'
        where id = #{groupId}
    </update>

    <select id="showGroundDetail" parameterType="long" resultType="grounddto">
        SELECT *
        from ground
        where id = #{id}
    </select>

    <select id="getGroundList" resultType="groundJoined">
        select *, -l.id
        from ground g join lecture l on
        g.lecture_id = l.id
        <where>
            <foreach collection="filterMap" item="value" separator=" AND ">
                ${value.key} = #{value.value}
            </foreach>
            <if test="keyword != null">AND l.title like concat('%', #{keyword}, '%')</if>
        </where>
        <if test="sortBy != null">
            <if test="sortBy == 'asc' or sortBy == 'desc'">
                ORDER BY ${orderBy} ${sortBy}
            </if>
        </if>
        limit #{startRow}, #{limit}
    </select>


    <select id="getMyGroundList" resultType="Map">
        select title, information, lecture_id as lectureId, level, max_capacity as maxCapacity, deposit,
        is_validated as isValidated, is_premium as isPremium, created_at as createdAt,
        start_at as startAt, end_at as endAt,validated_at as validatedAt,
        status, mission_fail_limit as missionFailLimit,
        u.id as userGroundId, user_id as userId, ground_id as groundId, is_attending as isAttending,
        is_success as isSuccess, rating, comment
        from ground g join user_ground u on
        g.id = u.ground_id
        <where>
            u.user_id = #{userId}
            <if test="status != null">AND g.status = #{status}</if>
        </where>
        limit #{startRow}, #{ROWS_PER_PAGE}
    </select>


    <insert id="createGround" parameterType="creategrounddto">
        insert into ground (user_id, lecture_id, title, information, level,
                            min_capacity, max_capacity, deposit, start_at, end_at, mission_fail_limit)
        values (#{userId}, #{lectureId}, #{title}, #{information}, #{level},
                #{minCapacity}, #{maxCapacity}, #{deposit}, #{startAt}, #{endAt}, #{missionFailLimit})
    </insert>

    <update id="refundDeposit">
        update user
        set point = point + (select deposit from ground where id = #{groundId})
        where id in (select user_id from user_ground where ground_id = #{groundId})
    </update>

    <update id="markNotAttending">
        update user_ground
        set is_attending = 0
        where user_id in (select user_id from user_ground where ground_id = #{groundId})
          and ground_id = #{ground_id}
    </update>
</mapper>

