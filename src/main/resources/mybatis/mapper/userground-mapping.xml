<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="companion.challeculum.domains.userground.UserGroundDao">
    <!--Jonghyun-->
    <sql id="select_userground_joined">
        select ug.id, ug.user_id, ground_id, is_attending, is_success, rating, review,
               oauth_id, username, password, nickname, phone, point, mission_score, role,
               g.user_id as created_by, lecture_id, title, information, level, min_capacity, max_capacity, deposit, is_validated, is_premium, created_at, start_at, end_at, validated_at, status, mission_fail_limit
        from user_ground ug join user u on u.id = ug.user_id join ground g on g.id = ug.ground_id
    </sql>
    <select id="getUserGround" resultType="userGround">
        select * from user_ground where user_id = #{userId} and ground_id=#{ground_id};
    </select>
    <select id="getUserGroundJoined" resultType="userGroundJoined">
        <include refid="select_userground_joined"/> where ug.user_id = #{userId} and ug.ground_id=#{groundId};
    </select>
    <select id="getUserGroundJoinedListByGroundId" resultType="userGroundJoined">
        <include refid="select_userground_joined"/> where ug.ground_id = #{groundId}
    </select>
    <select id="getUserGroundJoinedListByUserId" resultType="userGroundJoined">
        <include refid="select_userground_joined"/> where ug.user_id = #{userId}
    </select>
    <select id="getUserGroundListByGroundId" resultType="userGround">
        select * from user_ground where ground_id = #{groundId}
    </select>
    <select id="getUserGroundListByUserId" resultType="userGround">
        select * from user_ground where user_id = #{userId}
    </select>


    <!--End of Jonghyun-->

    <!--Kiyoung-->
    <select id="getUserGroundCountByGroundId" resultType="int">
        select count(*) from user_ground where ground_id = #{grounId} and is_attending = true
    </select>

    <select id="getUserGroundSuccessCountByGroundId" resultType="int">
        select count(*) from user_ground where ground_id = #{groundId} and is_success = true
    </select>

    <!-- ki young !-->
    <select id="isReviewAvailable" resultType="Integer">
        SELECT is_attending
        FROM user_ground
        WHERE user_id = #{userId} AND ground_id = #{groundId} AND is_attending = 1;
    </select>
    <!--End of Kiyoung-->

    <!--Sojeong-->
    <!--End of Sojeong-->

    <!--Hwajun-->
    <select id="getUserGroundList" resultType="userGroundJoined">
        SELECT ug.id as id, ground_id, user_id, is_attending,
               is_success, rating, review, oauth_id, username, nickname,
               point, mission_score
        FROM user_ground ug join user u
            ON ug.user_id = u.id
        WHERE ground_id = #{groundId}
          AND is_attending=1
          AND EXISTS(select * from user_ground where user_id=#{userId}
                                                 and ground_id=#{groundId}
                                                 and is_attending=1)
    </select>

    <update id="reviewUserGround">
        UPDATE user_ground
        SET rating=#{review.rating}, review=#{review.review}
        WHERE ground_id=#{groundId} AND user_id=#{userId} AND is_success IS NOT NULL
    </update>
    <!--End of Hwajun-->

    <!--HyunJoon-->
<!--    <select id="getUserGroundJoined" resultType="UserGroundJoined">-->
<!--        SELECT ug.id, ug.user_id, ground_id, is_attending, is_success, rating, review,-->
<!--               oauth_id, username, password, nickname, phone, point, mission_score, role,-->
<!--               lecture_id, title, information, level, max_capacity, deposit, is_validated,-->
<!--               is_premium, created_at, start_at, end_at, validated_at, status, mission_fail_limit-->
<!--        FROM user_ground ug join user u on u.id = ug.user_id join ground g on g.id = ug.ground_id-->
<!--        WHERE ug.user_id = #{userId} and ug.ground_id=#{groundId};-->
<!--    </select>-->

    <select id="countParticipant" resultType="int">
        SELECT count(*)
        FROM user_ground
        WHERE ground_id = #{groundId}
          AND is_attending = 1
    </select>

    <select id="getPoint" resultType="int">
        SELECT point
        FROM user
        WHERE id = #{userId}
    </select>

    <select id="getOnDoingLecture" resultType="int">
        SELECT count(*)
        FROM user_lecture
        WHERE user_id = #{userId}
          AND lecture_id = #{lectureId}
    </select>

    <insert id="participateGround">
        INSERT INTO user_ground (user_id, ground_id)
        VALUES (#{userId}, #{groundId})
    </insert>

    <update id="participateGroundUpdate">
        UPDATE user_ground
        SET is_attending = 1
        WHERE user_id = #{userId}
          AND ground_id = #{groundId}
    </update>

    <update id="deductDeposit">
        UPDATE user
        SET point = (select point FROM user WHERE id = #{userId}) - (select deposit FROM ground WHERE id = #{groundId})
        WHERE id = #{userId}
    </update>

    <update id="changeUserGround">
        UPDATE user_ground
        SET is_attending = 0
        WHERE user_id = #{userId}
          AND ground_id = #{groundId}
    </update>

    <update id="receiveDeposit">
        UPDATE user
        SET point = (select point FROM user WHERE id = #{userId}) + (select deposit FROM ground WHERE id = #{groundId})
        WHERE id = #{userId}
    </update>
    <!--End Of HyunJoon-->
</mapper>
